{pirsavelog.p}

/*
               Банковская интегрированная система БИСквит
    Copyright: (C) 1992-2002 ТОО "Банковские информационные системы"
     Filename: i56_20r.p
      Comment: Отчет "Кассовая книга учета...."
   Parameters:
         Uses:
      Used by:
      Created: 04/07/2002 Gunk
     Modified: 
*/
DEFINE INPUT PARAMETER iDataID LIKE DataBlock.Data-ID NO-UNDO.

{norm.i}
{sh-defs.i}
{globals.i}
{chkacces.i}
{intrface.get strng}

DEFINE VARIABLE mchBankName AS CHARACTER EXTENT 3 FORMAT "x(40)" NO-UNDO.

DEFINE VARIABLE mlgShowTurn AS LOGICAL INITIAL NO VIEW-AS TOGGLE-BOX
   LABEL "Показывать обороты" NO-UNDO.
DEFINE VARIABLE mlgShowTitle AS LOGICAL INITIAL NO VIEW-AS TOGGLE-BOX
   LABEL "Титульный лист" NO-UNDO.
DEFINE VARIABLE mlgShowSign AS LOGICAL INITIAL NO VIEW-AS TOGGLE-BOX
   LABEL "Заверительная надпись" NO-UNDO.
DEFINE VARIABLE mShowAcct   AS LOGICAL INITIAL NO VIEW-AS TOGGLE-BOX
   LABEL "Показывать лицевые счета"  NO-UNDO.

DEFINE FRAME fFr
   mlgShowTurn  SKIP
   mlgShowTitle SKIP
   mlgShowSign  SKIP
   mShowAcct    SKIP
   WITH SIDE-LABELS CENTERED OVERLAY TITLE COLOR brigth-white "[ Введите параметры печати ]".

DEFINE TEMP-TABLE ByCurrency
   FIELD Currency AS CHAR
   FIELD Val AS DEC
   FIELD Rub AS DEC
   FIELD Kol AS DEC
.

DEFINE VARIABLE mHd AS CHARACTER  NO-UNDO EXTENT 6.

ON RETURN OF mlgShowTurn, mlgShowTitle, mlgShowSign, mShowAcct IN FRAME fFr
   APPLY "GO":U TO SELF.

Main:
DO ON ERROR UNDO, LEAVE:

  /* DO ON ERROR  UNDO, LEAVE
      ON ENDKEY UNDO, LEAVE:
      UPDATE 
         mlgShowTurn 
         mlgShowTitle 
         mlgShowSign 
         mShowAcct 
      WITH FRAME fFr.
   END.*/
   HIDE FRAME fFr NO-PAUSE.
   IF KEYFUNC (LASTKEY) EQ "end-error" THEN LEAVE Main.
   
   {fexp-chk.i
      &DataID = iDataID
   }
   mchBankName[1] = branch.name.
   
   &SCOP repwidth 91
   {setdest.i 
      &cols = {&repwidth}
   }
   
   IF mlgShowTitle THEN DO:
      PUT UNFORMATTED
         mchBankName[1] SKIP
         "────────────────────────────────────────" SKIP
         "  (наименование кредитной организации)"   SKIP
         SKIP(10)
         "КНИГА":C{&repwidth} SKIP(1)
         "учета денежной наличности и других ценностей":C{&repwidth} SKIP(1)
         "                                 за " YEAR(DataBlock.end-date) " г." SKIP
         SKIP(10)
         "                                             Начата    " {strdate.i DataBlock.end-date} SKIP(1)
         "                                             Окончена ~"___~"____________г." SKIP(1)
         SKIP(10)
         "Записи в настоящей книге производятся":C{&repwidth} SKIP
         "до полного ее использования":C{&repwidth} SKIP
      .
      PAGE.
   END.
   
   IF NOT mShowAcct 
   THEN ASSIGN       
         mHd[1] = "─────"
         mHd[2] = "NoNo "
         mHd[3] = "сче- "
         mHd[4] = "тов  "
         mHd[5] = "     "
         mHd[6] = mHd[1].
   ELSE ASSIGN
         mHd[1] = "────────────────────"
         mHd[2] = "     NoNo счетов    "
         mHd[3] = "                    "
         mHd[4] = mHd[3]
         mHd[5] = mHd[3]
         mHd[6] = mHd[1].
   
   PUT UNFORMATTED
      "                                                  Месяц " {rsdate.i MONTH(DataBlock.end-date)} SKIP(1)
      "┌───────────────────────────────────┬" + mHd[1] + "┬───────────────────────────────┐" SKIP
      "│                                   │" + mHd[2] + "│ Остаток на " DataBlock.end-date + 1 FORMAT "99.99.9999" "         │" SKIP
      "│          Наименование             │" + mHd[3] + "├───────┬───────────────────────┤" SKIP
      "│                                   │" + mHd[4] + "│Кол-во │         Сумма         │" SKIP
      "│                                   │" + mHd[5] + "│  док. │                       │" SKIP
      "├───────────────────────────────────┼" + mHd[6] + "┼───────┼────────────────────┬──┤" SKIP
   .
   RUN PrintDataLine ("Денежная наличность","",0,0,YES).
   /* цикл Баланс */
   FOR EACH DataLine OF DataBlock WHERE
            DataLine.Sym1 BEGINS "20202" 
      NO-LOCK,
      FIRST acct WHERE 
            acct.acct EQ DataLine.Sym4 
        AND acct.curr EQ DataLine.Sym3
      NO-LOCK
      BREAK BY DataLine.Sym1 
            BY DataLine.Sym3:
       
      RUN acct-pos IN h_BASE (acct.acct, acct.currency, DataBlock.beg-date, DataBlock.end-date,?).
      /* Заголовок */
      IF FIRST-OF(DataLine.Sym1) THEN 
         RUN PrintDataLine(ENTRY(1,DataLine.Txt,"~n"),
                           IF mShowAcct THEN "" ELSE DataLine.Sym1,
                           0,
                           0,
                           YES).
      
      ACCUMULATE sh-db           (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 sh-cr           (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 sh-val          (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 sh-bal          (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[6] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[7] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[2] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[3] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
      .
      IF mShowAcct THEN
      DO:
         RUN PrintDataLine 
            ( "",
              acct.acct,
              ?,
              IF DataLine.Sym3 = "" 
                 THEN sh-bal
                 ELSE sh-val,
              NO).
      END.
      /* Валюта */
      IF LAST-OF(DataLine.Sym3) THEN DO:
         FIND FIRST currency WHERE currency.currency EQ DataLine.Sym3 NO-LOCK NO-ERROR.
         CREATE ByCurrency.
         ASSIGN ByCurrency.Val = IF DataLine.Sym3 = "" THEN
                                    ACCUM TOTAL BY DataLine.sym3 sh-bal
                                 ELSE
                                    ACCUM TOTAL BY DataLine.Sym3 sh-val
                ByCurrency.Rub = ACCUM TOTAL BY DataLine.sym3 sh-bal
                ByCurrency.Currency = currency.name-curr WHEN AVAIL currency.
         IF mShowAcct THEN
         DO:
            RUN PrintDataLine(ByCurrency.Currency,"Ед. валюты",?,ByCurrency.Val,NO).
            RUN PrintDataLine(""            ,"Руб. эквивалент",?,ByCurrency.Rub,NO). 
            IF mLgShowTurn THEN
            DO:
               RUN PrintDataLine 
                  ( FILL(" ",28) + "Приход",
                    "",
                    ACCUM TOTAL BY DataLine.Sym3 DataLine.Val[6],
                    ACCUM TOTAL BY DataLine.Sym3 DataLine.Val[2],
                    NO).
               RUN PrintDataLine 
                  ( FILL(" ",28) + "Расход",
                    "",
                    ACCUM TOTAL BY DataLine.Sym3 DataLine.Val[7],
                    ACCUM TOTAL BY DataLine.Sym3 DataLine.Val[3],
                    NO).
            END.
            RUN PrintDataLine ("","",0,0,YES).
         END.
      END.
      IF LAST-OF(DataLine.Sym1) THEN DO:
         IF mlgShowTurn THEN DO:
            RUN PrintDataLine 
               ( FILL(" ",28) + "Приход",
                 "",
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[6],
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[2],
                 NO).
            RUN PrintDataLine 
               ( FILL(" ",28) + "Расход",
                 "",
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[7],
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[3],
                 NO).
         END.
         RUN PrintDataLine 
            ( FILL(" ",27) + "Остаток",
              "",
              ?,
              ACCUM TOTAL BY DataLine.Sym1 sh-bal,
              NO).
      END.
   END.
   RUN PrintDataLine ("","",0,0,YES).
   IF NOT mShowAcct THEN
   DO:
      RUN PrintDataLine ("В том числе:","",0,0,YES).
      RUN PrintDataLine ("","",0,0,YES).
      FOR EACH ByCurrency:
         RUN PrintDataLine(ByCurrency.Currency,
                           "",
                           ?,
                           ByCurrency.Val,
                           NO).
      END.
      RUN PrintDataLine ("","",0,0,YES).
   END.
   RUN PrintDataLine ("Другие ценности:","",0,0,YES).
   /* цикл Внебаланс */
   FOR EACH DataLine OF DataBlock WHERE 
        NOT DataLine.Sym1 BEGINS "20202" and DataLine.Sym2 EQ "o" 
      NO-LOCK,
      FIRST acct WHERE 
            acct.acct EQ DataLine.Sym4 
        AND acct.curr EQ DataLine.Sym3
      NO-LOCK
      BREAK BY DataLine.Sym1
            BY DataLine.Sym3:
      
      IF FIRST-OF (DataLine.Sym1) THEN EMPTY TEMP-TABLE ByCurrency.
      
      RUN acct-pos IN h_BASE (acct.acct, 
                              acct.currency, 
                              DataBlock.beg-date, 
                              DataBlock.end-date, 
                              ?).
      /* Накопление суммы */
      ACCUMULATE 
         sh-bal (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
         sh-val (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
	 DataLine.Val[6] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
         DataLine.Val[7] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
         DataLine.Val[2] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
         DataLine.Val[3] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
	 DataLine.Val[5] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
      .
      
      IF mShowAcct THEN
         RUN PrintDataLine
            (IF FIRST-OF (DataLine.Sym1)
                THEN ENTRY(1,DataLine.Txt,"~n")
                ELSE "",
             acct.acct,
             ?,
             sh-bal,
             NO).
      
      /* Валюта */
      IF LAST-OF(DataLine.Sym3) THEN
      FOR FIRST currency WHERE 
                currency.currency EQ DataLine.Sym3 
         NO-LOCK:
         CREATE ByCurrency.
         ASSIGN 
            ByCurrency.Rub = ACCUM TOTAL BY DataLine.sym3 sh-bal
	    ByCurrency.Val = IF DataLine.Sym3 = "" 
                                THEN ByCurrency.rub
                                ELSE (ACCUM TOTAL BY DataLine.Sym3 sh-val)
            ByCurrency.Currency = currency.name-curr WHEN AVAIL currency
	    ByCurrency.kol = IF ByCurrency.Val = 0
				THEN 0
				ELSE (ACCUM TOTAL BY DataLine.Sym3 DataLine.Val[5])
         .
         IF mShowAcct THEN
         DO:
            RUN PrintDataLine(ByCurrency.Currency,"Ед. валюты",?,ByCurrency.Val,NO).
            RUN PrintDataLine(""            ,"Руб. эквивалент",?,ByCurrency.Rub,NO).
         END.
         RELEASE ByCurrency.
      END.
      
      
      IF LAST-OF(DataLine.Sym1) THEN DO:         
         RUN PrintDataLine
            (ENTRY(1,DataLine.Txt,"~n"),
             IF mShowAcct 
                THEN "Всего" 
                ELSE DataLine.Sym1,
             ?,
             /* ACCUM TOTAL BY DataLine.Sym1 sh-bal */ "",
             NO).
         IF mlgShowTurn THEN DO:
            RUN PrintDataLine 
               ( FILL(" ",28) + "Приход",
                 "",
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[6],
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[2],
                 NO).
            RUN PrintDataLine 
               ( FILL(" ",28) + "Расход",
                 "",
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[7],
                 ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[3],
                 NO).
         END.
         IF NOT mShowAcct THEN
         FOR EACH ByCurrency BREAK BY ByCurrency.Currency:
            IF FIRST (ByCurrency.Currency) THEN
               RUN PrintDataLine ("В том числе:","",0,0,YES).
               
            RUN PrintDataLine(ByCurrency.Currency,"",ByCurrency.kol,ByCurrency.Val,NO).
	    /* проставлено кол-во документов */
            IF LAST (ByCurrency.Currency) THEN
               RUN PrintDataLine ("","",0,0,YES).
            
         END.
      END.
   END.
      /* цикл Депозитарий */
   FOR EACH DataLine OF DataBlock WHERE
            DataLine.Sym2 EQ "d"
      NO-LOCK,
      FIRST acct WHERE 
            acct.acct EQ DataLine.Sym4 
        AND acct.curr EQ DataLine.Sym3
      NO-LOCK
      BREAK BY DataLine.Sym1 
            BY DataLine.Sym3:
       
      RUN acct-pos IN h_BASE (acct.acct, acct.currency, DataBlock.beg-date, DataBlock.end-date,?).
      /* Заголовок */
      IF FIRST-OF(DataLine.Sym1) THEN 
         RUN PrintDataLine(/* ENTRY(1,DataLine.Txt,"~n")*/
			  "Ценные бумаги на хранении в депозитарии"    
			    ,
                           IF mShowAcct THEN "" ELSE DataLine.Sym1,
                           0,
                           0,
                           YES).
      
      ACCUMULATE sh-db           (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 sh-cr           (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 sh-val          (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 sh-bal          (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[6] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[7] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[2] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
                 DataLine.Val[3] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
		             DataLine.Val[5] (TOTAL BY DataLine.Sym1 BY DataLine.Sym3)
      .
      /* Валюта */
      IF LAST-OF(DataLine.Sym1) THEN DO:
      /* FIND FIRST currency WHERE currency.currency EQ DataLine.Sym3
	                    and DataLine.Sym2 eq "d"   NO-LOCK NO-ERROR.*/
         CREATE ByCurrency.
         ASSIGN 
         ByCurrency.Rub = ACCUM TOTAL BY DataLine.sym1 sh-bal
		     ByCurrency.Val = ByCurrency.Rub /* IF DataLine.Sym2 eq "d" THEN
                                    ACCUM TOTAL BY DataLine.sym1 sh-bal
                                 ELSE
                                    ACCUM TOTAL BY DataLine.Sym1 sh-val*/
         ByCurrency.Currency = "Вексель"
		     ByCurrency.kol = IF ByCurrency.Val = ?
				 THEN 0
				 ELSE (ACCUM TOTAL BY DataLine.Sym1 DataLine.Val[5]).
         RELEASE ByCurrency.
      END.

   END.
   IF NOT mShowAcct THEN
   DO:
      RUN PrintDataLine ("В том числе:","",0,0,YES).
      FOR EACH ByCurrency where ByCurrency.Currency ne "Рубли":
         RUN PrintDataLine(/* ByCurrency.Currency ENTRY(1,DataLine.Txt,"~n") */
			                     "Счета ДЕПО",
                           "",
                           ByCurrency.kol,
                           ByCurrency.Val,
                           NO).
      END.
      RUN PrintDataLine ("","",0,0,YES).
   END.
   PUT UNFORMATTED
      "└───────────────────────────────────┴" + mHd[1] + "┼───────┴────────────────────┴──┤" SKIP
      " Должностные лица, ответственные     " + mHd[5] + "│                               │" SKIP
      " за сохранность ценностей            " + mHd[5] + "│                               │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      "    Начальник Д4                     " + mHd[5] + "│       ────────────────────────┤" SKIP
      "     (должность)                     " + mHd[5] + "│                               │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      " Начальник У12 (Зав.кассой)          " + mHd[5] + "│       ────────────────────────┤" SKIP
      "     (должность)                     " + mHd[5] + "│ подписи                       │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      " С данными бухгалтерского учета сверено:" + SUBSTR (mHd[5],5) + " │                               │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      " Главный бухгалтер                   " + mHd[5] + "│       ────────────────────────┤" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
      "                                     " + mHd[5] + "│                               │" SKIP
   .
   PAGE.
   
   IF mlgShowSign THEN DO:
      PUT UNFORMATTED
         FStrCenter(mchBankName[1], {&repwidth}) SKIP
         "────────────────────────────────────────":C{&repwidth} SKIP
         "  (наименование кредитной организации)":C{&repwidth}   SKIP
         SKIP(10)
         "ЗАВЕРИТЕЛЬНАЯ НАДПИСЬ":C{&repwidth} SKIP
         SKIP(10)
         "Итого в настоящей книге содержится пронумерованных и":C{&repwidth} SKIP(1)
         "прошнурованных_____________________________________________листов":C{&repwidth} SKIP
         "         (количество листов указывается прописью)":C{&repwidth} SKIP(1)
         "с No______ по No______ включительно":C{&repwidth} SKIP
         SKIP(10)
         "Должностные лица, ответственные" SKIP
         "за сохранность ценностей" SKIP
         SKIP(2)
         "───────────────────    ───────────────────" SKIP
         "    (должность)             (подпись)"      SKIP
         SKIP(2)
         "───────────────────    ───────────────────" SKIP
         "    (должность)             (подпись)"      SKIP
         SKIP(2)
         "Главный бухгалтер      ───────────────────" SKIP
         "                            (подпись)"      SKIP
         SKIP(1)
         {strdate.i DataBlock.end-date}               SKIP
         SKIP(1)
         "М.П." SKIP
      .
   END.
   {preview.i}
   
END.
{intrface.del}
RETURN "".
/* ================================= */
PROCEDURE PrintDataLine:
   DEFINE INPUT  PARAMETER i-name AS CHARACTER  NO-UNDO.
   DEFINE INPUT  PARAMETER i-sym  AS CHARACTER  NO-UNDO.
   DEFINE INPUT  PARAMETER i-Dqty AS DECIMAL    NO-UNDO.
   DEFINE INPUT  PARAMETER i-Val  AS DECIMAL    NO-UNDO.
   DEFINE INPUT  PARAMETER i-empt AS LOGICAL    NO-UNDO.
   {wordwrap.def}
   
   DEFINE VARIABLE NAME AS CHARACTER  NO-UNDO EXTENT 5.
   DEFINE VARIABLE Wrap AS INTEGER    NO-UNDO.
   DEFINE VARIABLE InfoString AS CHARACTER  NO-UNDO FORMAT "x(128)".
   NAME[1] = i-name.
   {wordwrap.i &s = NAME &l = 35 &n = 5 }
   DO Wrap = 1 TO 5:
      IF NAME[Wrap] EQ "" AND Wrap GE 2 THEN NEXT.
      InfoString = "│" + STRING(NAME[Wrap],"x(35)") + "│" 
      + (IF Wrap = 1 THEN STRING(ENTRY(1,i-sym,'_'),FILL ("9",LENGTH (mHd[1]))) ELSE FILL (" ",LENGTH (mHd[1]))).
      IF Wrap EQ 1 AND NOT i-empt THEN DO:
         IF i-dqty EQ ? THEN
            {additem3.i InfoString "FILL(' ',7)" 179 }
         ELSE
            {additem3.i InfoString "STRING(i-dqty,'>>>>>>9')" 179 }
         IF i-val EQ 0 and NAME[Wrap] NE "Счета ДЕПО" THEN
         DO:
            {additem3.i InfoString "FILL(' ', 20)" 179 }   
            {additem3.i InfoString "FILL(' ', 2)" 179 }   
         END.
         ELSE   
            {additem3.i InfoString "REPLACE(STRING(i-Val, OutputFormat), '.', '│')" 179 }
      END.
      ELSE DO:
         {additem3.i InfoString "FILL(' ',7)" 179 }
         {additem3.i InfoString "FILL(' ', 20)" 179 }   
         {additem3.i InfoString "FILL(' ', 2)" 179 }   
      END.
      InfoString = InfoString + CHR(179).
      PUT UNFORMATTED InfoString SKIP.
   END.

END PROCEDURE.
