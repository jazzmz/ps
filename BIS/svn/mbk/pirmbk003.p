{pirsavelog.p}

/** 
		Формирование распоряжение на пролонгацию МБК.
		
		Бурягин Е.П., 17.04.2007 14:47
		
		Все данные, необходимые для формирования распоряжения должны быть введены в базу данных.
		
		Процедура запрашивает дату распоряжения, относительно которой потом ищет
		старое и новое условие. 
		
		Запускается из броузера кредитных/депозитных договоров.
		
		Алгоритм расчета срока аренды учитывает "хитрое" ведение договоров МБК в части условий:
		дата любого условия кроме первого должна быть равна (реальная дата + 1 день).
		
		Проверяет был ли привязан новый счет с ролью "Кредит" от даты распоряжения.
		Если был, то в конце текста распоряжения добавляется необходимая информация о переносе.
		
		Изменено: Бурягин Е.П. 10.08.2007 10:09 (Локальный код для поиска 0000001)
		          По устной заявке Машковой И.
		          Убрал из подписей исполнителя, вместо убранного добавил нач.финансовых рынков.

		Изменено: <Кто> <Когда [F7]> (Локальный код для поиска <уникальный_код>)
		          <Описание изменения>

*/

/** Глобализация */
{globals.i}
{get-bankname.i}

/** Буду использовать информацию из броузера о выделенных записях */
{tmprecid.def}

/** Мои функции */
{ulib.i}

/** Буду использовать перенос по словам */
{wordwrap.def}

/** Старое условие */
DEF BUFFER oldCondition FOR loan-cond .
/** Новое условие */
DEF BUFFER newCondition FOR loan-cond.
/** Предпоследний договор */
DEF BUFFER bfrLastLoan FOR loan.

/** Дата распоряжения */
DEF VAR orderDate AS DATE LABEL "Дата распоряжения" FORMAT "99/99/9999" NO-UNDO.
/** Форма ввода реквизитов распоряжения */
DEF FRAME frmOrder
	orderDate SKIP
	WITH CENTERED TITLE "Реквизиты распоряжения" SIDE-LABELS OVERLAY.

/** Сумма МБК */
DEF VAR amount AS DECIMAL LABEL "Сумма" FORMAT ">>>,>>>,>>>,>>9.99" NO-UNDO.
DEF VAR strAmount AS CHAR EXTENT 2 NO-UNDO.

/** Начальники */
DEF VAR bosD2 AS CHAR NO-UNDO.
DEF VAR bosKazna AS CHAR NO-UNDO.

/** 0000001: added at 10.08.2007 10:10 */
DEF VAR bosFin AS CHAR NO-UNDO.
/** 0000001: end */

/** Исполнитель */
DEF VAR executor AS CHAR NO-UNDO.
DEF VAR execPost AS CHAR EXTENT 3 NO-UNDO.

/** Старый и новый счет */
DEF VAR oldAccount AS CHAR NO-UNDO.
DEF VAR newAccount AS CHAR NO-UNDO.

/** Наименование банка */
DEF VAR bankname AS CHAR NO-UNDO.

/** Основной текст */
DEF VAR str AS CHAR EXTENT 20 NO-UNDO.
/** Итератор для вывода текста распоряжения */
DEF VAR i AS INTEGER NO-UNDO.

/** Наименование клиента */
DEF VAR client AS CHAR NO-UNDO.
/** Генеральное соглашение */
DEF VAR genagree AS CHAR LABEL "Номер ГС" FORMAT "x(20)" NO-UNDO.
DEF VAR genagreedate AS DATE LABEL "Дата ГС" FORMAT "99/99/9999" NO-UNDO.

/** Срок пролонгации */
DEF VAR lease AS INTEGER NO-UNDO.
DEF VAR strLease AS CHAR EXTENT 2 NO-UNDO.

/** Форма просмотра/редактирования */
DEF FRAME frmClient
	/** ttClient.id SKIP */
	loan.cont-code LABEL "Сделка МБК" SKIP
	genagree genagreedate SKIP
	WITH CENTERED TITLE "Реквизиты сделки" SIDE-LABELS OVERLAY.


PAUSE 0.

/** Запрашиваем у пользователя реквизиты распоряжения */
orderDate = TODAY.
UPDATE orderDate WITH FRAME frmOrder.
HIDE FRAME frmOrder.

/** Возьмем начальников */
bosD2 = FGetSetting("PIRboss","PIRbosD2", "<не найден>,<не найден>").
bosKazna = FGetSetting("PIRboss", "PIRbosKazna", "<не найден>,<не найден>").

/** 0000001: added at 10.08.2007 10:16 */
bosFin = FGetSetting("PIRboss", "PIRbosfinmark", "<не найден>,<не найден>").
/** 0000001: end */

/** Возьмем наименование банка */
bankname = cBankName.

/** Вычислим исполнителя */
find first _user where _user._userid = userid no-lock no-error.
if avail _user then 
	do:
	executor = _user._user-name.
	executor = GetXAttrValueEx("_user", _user._userid, "Должность", "") + "," + executor. 
	end.
else
	executor = "-,-".

/** Для каждого выделенной в броузере записи делаем... */
FOR EACH tmprecid NO-LOCK,
    /** Найдем договор */
    FIRST loan WHERE RECID(loan) = tmprecid.id NO-LOCK,
    /** Найдем старое условие */
    LAST oldCondition WHERE oldCondition.contract = loan.contract AND oldCondition.cont-code = loan.cont-code
    		AND oldCondition.since <= orderDate NO-LOCK,
    /** Найдем новое условие */
    FIRST newCondition WHERE newCondition.contract = loan.contract AND newCondition.cont-code = loan.cont-code
    		AND newCondition.since > orderDate NO-LOCK
  :

  	/** Возьмем сумму договора */
  	amount = GetLoanLimit_ULL(loan.contract, loan.cont-code, loan.open-date, false).
  	/** Сумма прописью */
		Run x-amtstr.p(amount, loan.currency, true, true, output strAmount[1], output strAmount[2]).
  	strAmount[1] = strAmount[1] + ' ' + strAmount[2].
		Substr(strAmount[1],1,1) = Caps(Substr(strAmount[1],1,1)).

		/** Вычислим срок пролонгации в днях */
		lease = loan.end-date - newCondition.since + 1.
		/**
		if oldCondition.since = loan.open-date then 
			lease = lease - 1.
		*/
		Run x-amtstr.p(lease, "", false, false, output strLease[1], output strLease[2]).
		Substr(strAmount[1],1,1) = Caps(Substr(strAmount[1],1,1)).
		
		/** Возьмем клиента */
		client = GetLoanInfo_ULL(loan.contract, loan.cont-code, "client_short_name", false).
		
		/** Старый счет */
		oldAccount = GetLoanAcct_ULL(loan.contract, loan.cont-code, "Кредит", orderDate - 1, false).
		/** Новый счет */
		newAccount = GetLoanAcct_ULL(loan.contract, loan.cont-code, "Кредит", orderDate, false).
		
  	/** Возьмем реквизиты генерального соглашения */
  	genagree = GetXAttrValueEx("loan", loan.contract + "," + loan.cont-code, "pirgenagree", ",").
  	/** Если нет на текущем договоре, ищем на предыдущем */
  	if genagree = "," then do:
  		FIND LAST bfrLastLoan WHERE 
  						bfrLastLoan.contract = loan.contract AND bfrLastLoan.cont-code <> loan.cont-code 
  						NO-LOCK NO-ERROR.
  		IF AVAIL bfrLastLoan THEN DO:
  			genagree = GetXAttrValueEx("loan", bfrLastLoan.contract + "," + bfrLastLoan.cont-code, "pirgenagree", ",").
  		END.
  	end.
  	genagreedate = DATE(ENTRY(1, genagree)).
  	genagree = ENTRY(2, genagree).
  	
  	DISPLAY loan.cont-code genagree genagreedate WITH FRAME frmClient.
  	UPDATE genagree genagreedate WITH FRAME frmClient.

  	/** Сохраним реквизиты генерального соглашения */
  	FIND FIRST signs WHERE 
  			signs.file-name = "loan"  	
  			AND
  			signs.code = "pirgenagree"
  			AND
  			signs.surrogate = loan.contract + "," + loan.cont-code 
  			NO-ERROR.
  	IF AVAIL signs THEN
  		signs.xattr-value = STRING(genagreedate,"99/99/9999") + "," + genagree.
  	ELSE 
  		DO:
  			CREATE 	signs.
  			ASSIGN 	signs.file-name = "loan"
  							signs.code = "pirgenagree"
  							signs.surrogate = loan.contract + "," + loan.cont-code
  							signs.xattr-value = STRING(genagreedate,"99/99/9999") + "," + genagree.
  		END.


  	/** Формируем основной текст c #tab - табуляцией, #cr - переносами */
  	str[1] = "#tabПрошу сумму в размере " + STRING(amount) + " (" + strAmount[1] + "),"
  	       + " предоставленную в виде МБК " + client + " по сделке от " 
  	       + STRING((IF oldCondition.since = loan.open-date THEN oldCondition.since ELSE oldCondition.since - 1), "99/99/9999")
  	       + "г. в рамках Генерального Соглашения №" + genagree + " об общих условиях сотрудничества в области "
  	       + "проведения операций на российском валютном и денежном рынках от " + STRING(genagreedate, "99/99/9999")
  	       + "г. пролонгировать на срок " + STRING(lease) + " (" + trim(strLease[1]) + ") день(я,ей) до " 
  	       + STRING(loan.end-date, "99/99/9999") + "г. на основании сделки №" + loan.cont-code + " от "
  	       + STRING(newCondition.since - 1, "99/99/9999") + "г.".
  	if newAccount <> oldAccount then 
  		str[1] = str[1] + " и перенести со счета " + oldAccount + " на счет " + newAccount + ".".
  	       .
  	{wordwrap.i &s=str &l=80 &n=20}    
  	
  	{setdest.i}
  	/** Формируем распоряжение */
  	PUT UNFORMATTED bankname SKIP
  			SPACE(50) "Утверждаю" SKIP
  			SPACE(50) ENTRY(1,bosD2) SKIP(1)
  			SPACE(50) "___________________" SKIP
  			SPACE(54) ENTRY(2,bosD2) SKIP(1)
  			SPACE(50) "В Департамент 3" SKIP(2)
  			SPACE(25) "Р А С П О Р Я Ж Е Н И Е" SKIP
  			SPACE(32) orderDate FORMAT "99/99/9999" SKIP(1).
  			
  	
		/** Выводим основной текст */
		DO i = 1 TO 20:
							IF str[i] <> "" THEN DO:
								str[i] = REPLACE(str[i], "#tab",CHR(9)).
								str[i] = REPLACE(str[i], "#cr", CHR(10)).
								PUT UNFORMATTED str[i] SKIP.
							END.
		END.
		
		/** Выводим подписи */
		
		execPost[1] = ENTRY(1,executor).
		{wordwrap.i &s=execPost &l=30 &n=3}
		
		PUT UNFORMATTED
						" " SKIP(2) SPACE(4) ENTRY(1,bosKazna) FORMAT "x(50)" "___________________" SKIP
						SPACE(4 + 50 + 3) ENTRY(2,bosKazna) SKIP(3).
/** 0000001: commented at 10.08.2007 10:18 
						PUT UNFORMATTED	SPACE(4) execPost[1] FORMAT "x(50)" "___________________" SKIP
														SPACE(4) execPost[2] FORMAT "x(50)" SPACE(3) ENTRY(2,executor) SKIP
														SPACE(4) execPost[3] FORMAT "x(50)" SKIP.
*/

/** 0000001: added at 10.08.2007 10:18 */
		PUT UNFORMATTED
						" " SKIP(2) SPACE(4) ENTRY(1,bosFin) FORMAT "x(50)" "___________________" SKIP
						SPACE(4 + 50 + 3) ENTRY(2,bosFin) SKIP(3).
/** 0000001: end */
	  			
  	{preview.i}
  	
END.

HIDE FRAME frmClient.
